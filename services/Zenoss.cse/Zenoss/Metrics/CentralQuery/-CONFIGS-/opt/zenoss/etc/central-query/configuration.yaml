authEnabled: true
logging:
  level: INFO
  loggers:
    "org.zenoss": INFO
metrics:
  defaultReturnSet: EXACT
  defaultStartTime: 1h-ago
  defaultEndTime: now
  defaultSeries: true
  openTsdbUrl: http://127.0.0.1:4242
  defaultTsdTimeZone: UTC
  connectionTimeoutMs: 20000
  sendRateOptions: false
  ignoreRateOption: true
  rateOptionCutoffTs: {{(getContext . "centralquery.ratecutoff")}}

  # parameters to configure connection pool for querying OpenTsdb:
  # Total connections allowed per pool
  maxTotalPoolConnections: 100
  # Max number of connections for a given route
  maxPoolConnectionsPerRoute: 100

  # parameters to configure thread pool for querying OpenTsdb:
  # Core number of threads in thread pool
  executorThreadPoolCoreSize: 20
  # Maximum number of threads in thread pool
  executorThreadPoolMaxSize: 250

proxyConfiguration:
  hostname: 127.0.0.1
  port: 8080
http:
  connectorType: nonblocking
  port: 8888
  adminPort: 58888
  ssl:
      #Example is using a java keystore in the target directory.
      keyStore: ${ssl.cert.dir}/ssl.pfx
      keyStorePassword: zapp_pass
      keyStoreType: pkcs12
  requestLog:
    console:
      enabled: false

managedReporter:
    metricReporters:
      - {posterType: http, username: "$env[CONTROLPLANE_CONSUMER_USERNAME]", password: "$env[CONTROLPLANE_CONSUMER_PASSWORD]", urlEnvironment: "CONTROLPLANE_CONSUMER_URL"}
      - {posterType: http, username: "{{(getContext . "global.conf.zauth-username")}}", password: "{{(getContext . "global.conf.zauth-password")}}", protocol: http, host: localhost, port: 8080, apiPath: /api/metrics/store}
